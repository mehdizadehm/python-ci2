jobs:
  build:
    docker:  
      - image: circleci/ruby:2.4.1
    steps:
      # - checkout
      - run: echo "A first hello hi"
      # -  run: mkdir -p my_workspace
      # - run: echo "Trying out workspaces" > my_workspace/echo-output
      - run:
          name: Creating new Diroectory
          command: |
            pwd
            mkdir testdir1
            cd testdir1
            pwd
            mkdir testdir2
            cd testdir2
            pwd
  test1:
    docker:
      - image: circleci/ruby:2.4.1
    environment:
      ENV_VAR: bar 
    steps:
      - run:
          name: Reading env. var. 1
          command: |
            echo "EnvVarTest"
            echo $ENV_VAR
            echo "ENV1"
            echo $ENV1
            echo "FRTEST"
            echo $FRTEST
            mkdir $ENV1
            cd $ENV1
            pwd
            mkdir $FRTEST
            cd $FRTEST
            pwd
            echo $NEWVAR
            
      - run:
          name: Reading env. var. 1
          command: |
            echo "EnvVarTest"
            echo $ENV_VAR
  test_macos: # runs not using `Workflows` must have a `build` job as entry point
    macos:  # indicate that we are using the macOS executor
      xcode: 11.3.0 # indicate our selected version of Xcode
    steps: # a series of commands to run
      - checkout  # pull down code from your version control system.
      - run:
          # run our tests using xcode's cli tool `xcodebuild`
          name: Run Unit Tests
          command: xcodebuild test -scheme circleci-demo-macos
      - run:
          # build our application
          name: Build Application
          command: xcodebuild
      - run:
          # compress Xcode's build output so that it can be stored as an artifact
          name: Compress app for storage
          command: zip -r app.zip build/Release/circleci-demo-macos.app
      - store_artifacts: # store this build output. Read more: https://circleci.com/docs/2.0/artifacts/
          path: app.zip
          destination: app

      
workflows:
  version: 2
  build_and_test:
    jobs:
      - build:
          context: MyContext # has an env var called MY_ENV_VAR
      - test1:
          requires:
            - build
      - test_macos:
          requires:
            - build
